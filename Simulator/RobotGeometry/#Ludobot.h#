/*
  Ludobot robot geometery
*/

#ifndef LUDOBOT_H
#define LUDOBOT_H

#include "BulletDemoFiles/DemoApplication.h"
#include "LinearMath/btAlignedObjectArray.h"

#include "btBulletDynamicsCommon.h"

class RagDoll
{
  enum
  {
    BODYPART_ = 0,
    BODYPART_SPINE,
    BODYPART_HEAD,

    BODYPART_LEFT_UPPER_LEG,
    BODYPART_LEFT_LOWER_LEG,

    BODYPART_RIGHT_UPPER_LEG,
    BODYPART_RIGHT_LOWER_LEG,

    BODYPART_LEFT_UPPER_ARM,
    BODYPART_LEFT_LOWER_ARM,

    BODYPART_RIGHT_UPPER_ARM,
    BODYPART_RIGHT_LOWER_ARM,

    BODYPART_COUNT
  };

  enum
  {
    JOINT_NONE = 0,

    JOINT_COUNT
  };

  btDynamicsWorld* m_ownerWorld;
  btCollisionShape* m_shapes[BODYPART_COUNT];
  btRigidBody* m_bodies[BODYPART_COUNT];
  btTypedConstraint* m_joints[JOINT_COUNT];

  btRigidBody* localCreateRigidBody (btScalar mass, const btTransform& startTransform, btCollisionShape* shape);

 public:
  RagDoll (btDynamicsWorld* ownerWorld, const btVector3& positionOffset);
  btTransform getLocation();

  virtual ~RagDoll ();
};

#endif
